#include "public.h"

//4ms, 93.81%
//列表

class Solution {
public:
	bool reorderedPowerOf2(int N) {
		//列出所有的2的幂次
		unordered_map<int, vector<vector<int>>> all2pow;
		all2pow[0] = { {0,1,0,0,0,0,0,0,0,0}, {0,0,1,0,0,0,0,0,0,0}, {0,0,0,0,1,0,0,0,0,0}, {0,0,0,0,0,0,0,0,1,0} };
		all2pow[1] = { {0,1,0,0,0,0,1,0,0,0}, {0,0,1,1,0,0,0,0,0,0}, {0,0,0,0,1,0,1,0,0,0} };
		all2pow[2] = { {0,1,1,0,0,0,0,0,1,0}, {0,0,1,0,0,1,1,0,0,0}, {0,1,1,0,0,1,0,0,0,0} };
		all2pow[3] = { {1,1,1,0,1,0,0,0,0,0}, {1,0,1,0,1,0,0,0,1,0}, {1,0,0,0,1,0,1,0,0,1}, {0,1,1,0,0,0,0,0,1,1} };
		all2pow[4] = { {0,1,0,1,1,0,1,0,1,0}, {0,0,1,1,0,0,1,1,1,0}, {0,0,0,1,0,2,2,0,0,0} };
		all2pow[5] = { {1,2,1,1,0,0,0,1,0,0}, {0,1,2,0,2,0,1,0,0,0}, {0,0,2,0,1,1,0,0,2,0} };
		all2pow[6] = { {1,1,0,0,1,1,1,1,1,0}, {1,1,2,0,0,1,0,1,0,1}, {1,1,0,1,3,0,0,0,0,1}, {1,0,0,1,0,0,1,0,4,0} };
		all2pow[7] = { {0,2,1,0,0,0,2,3,0,0}, {0,0,1,3,2,2,0,0,0,0}, {1,1,0,0,1,0,2,1,2,0} };
		all2pow[8] = { {0,2,2,1,1,0,0,2,1,0}, {0,0,1,1,2,2,2,0,1,0}, {1,1,1,1,0,1,1,1,1,1} };

		int size = 0;
		vector<int> allr(10, 0);
		while (N > 0)
		{
			allr[N % 10]++;
			N /= 10;
			size++;
		}

		if (size == 10) return false;
		else
		{
			for (auto& a : all2pow[size - 1])
				if (allr == a) return true;
			return false;
		}
	}
};

/*
int main()
{
	Solution* s = new Solution();
	cout << s->reorderedPowerOf2(635824465);
	return 0;
}
*/
